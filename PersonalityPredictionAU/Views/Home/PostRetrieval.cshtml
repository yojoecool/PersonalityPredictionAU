
@{
    ViewBag.Title = "Pull Retrieval";
}
<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css">

<script>
    var userID = "";
    var api_key = "57f4699a7ba60a05aad03fcf";
    var secret_key = "oJ1bk5DlRmDkzneGKvr459Zs56Z1DNrEzyrpdnlhCS0";
    var api_server = "https://app.receptiviti.com/api";
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            // Logged into your app and Facebook.
            getID();
            getPosts();
        } else if (response.status === 'not_authorized') {
            // The person is logged into Facebook, but not your app.
            document.getElementById('status').innerHTML = 'Please log ' +
              'into this app.';
        } else {
            // The person is not logged into Facebook, so we're not sure if
            // they are logged into this app or not.
            document.getElementById('status').innerHTML = 'Please log ' +
              'into Facebook.';
        }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }

    window.fbAsyncInit = function () {
        FB.init({
            appId: '1244894932227790',
            cookie: true,  // enable cookies to allow the server to access
            // the session
            xfbml: true,  // parse social plugins on this page
            version: 'v2.7' // use graph api version 2.5
        });

        // Now that we've initialized the JavaScript SDK, we call
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.

        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    };

    // Load the SDK asynchronously
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    var status = "";
    var responseKeep = [];
    var offset = 0;
    function getPosts() {
        console.log('Welcome!  Fetching your information.... ');
        document.getElementById('status').innerHTML = 'Welcome!  Fetching your information.... ';
        //FB.api('/me', function(response) {
        //  console.log('Successful login for: ' + response.name);
        //  document.getElementById('status').innerHTML =
        //    'Thanks for logging in, ' + response.name + '!';
        //});
        FB.api('/me/posts?limit=100&offset=' + offset, function (response) {
            if (response != null && response.hasOwnProperty('data') && response.data.length > 0) {
                responseKeep = responseKeep.concat(response.data);
                //document.getElementById('status').innerHTML =
                //response.data[0].message;
                //response.data[1].message;
                offset += 100;
                getPosts();
            }
            else {
                for (var i = 0; i < responseKeep.length; i++) {
                    if (responseKeep[i].hasOwnProperty('message') && responseKeep[i].message != 'undefined') {
                        status = status.concat(responseKeep[i].message.replace('\n', ' ') + "   ");
                    }
                }

                var contents = {
                    "name": userID,
                    "person_tags": [],
                    "gender": 0,
                    "content": {
                        "content_tags": [],
                        "content_handle": userID,
                        "language": "english",
                        "content_source": 0,
                        "content_date": "2016-09-22T15:19:03.395727",
                        "recipient_id": "",
                        "language_content": status,
                        "custom_fields": {}
                    },
                    "person_handle": userID
                }

                var request = new XMLHttpRequest();
                request.open("POST", api_server + "/person", false);
                request.setRequestHeader("X-API-KEY", api_key);
                request.setRequestHeader("X-API-SECRET-KEY", secret_key);
                request.setRequestHeader("Content-Type", "application/json");
                request.send(JSON.stringify(contents));
                if (request.status == 400) {
                    var text = request.responseText;
                    document.getElementById('status').innerHTML = JSON.parse(text).message;
                }
                else {
                    var text = request.responseText;
                    var json_ver = JSON.parse(text);
                    var liwc = json_ver.contents[0].liwc_scores;

                    $.ajax({
                        url: api_server + "/person/" + json_ver._id,
                        type: "DELETE",
                        headers: {
                            "X-API-KEY": api_key,
                            "X-API-SECRET-KEY": secret_key,
                        },
                        error: function () {
                            alert("Unable to delete person");
                        }
                    });

                    //var scores = "";
                    var display_scores = "";
                    var Scores = [];
                    for (var key in liwc) {
                        if (key == "categories") {
                            for (var cat in liwc[key]) {
                                //scores = scores + cat + " : " + liwc[key][cat] + ", ";
                                Scores.push({ Category: cat, Score: liwc[key][cat] });
                                display_scores = display_scores + cat + " : " + liwc[key][cat] + "<br> ";
                            }
                        } else {
                            //scores = scores + key + " : " + liwc[key] + ", ";
                            Scores.push({ Category: key, Score: liwc[key] });
                            display_scores = display_scores + key + " : " + liwc[key] + "<br> ";
                        }
                    }

                    $.ajax({
                        url: "/CategoryScore/Create",
                        type: "POST",
                        data: { Scores: Scores },
                        success: function () {
                            var id = document.getElementById("id").innerHTML;
                            window.location.replace("/Users/Details?id=" + id);
                        },
                        error: function () {
                            alert("Error");
                        }
                    });

                    //document.getElementById("status").innerHTML = display_scores;
                }
    /*
                $.ajax({
                    url: "/Home/userPostsTxt",
                    type: "POST",
                    data: { response: status, userID: userID },
                    success: function (response) {
                        document.getElementById("downloadLink").setAttribute("href", response);
                    },
                    error: function () {
                        alert("Error");
                    }
                });
                //document.getElementById('status').innerHTML =
                //    "Finished! Click the link below to download your text file.";
                document.getElementById('downloadLink').removeAttribute('hidden');*/
            }
        });
        
    }

    function getID() {
        FB.api('/me?fields=id', function (response) {
            userID = response.id;
        });
    }
</script>
<h2>Post Retrieval</h2>
<div hidden id="id">@ViewBag.id</div>
<div id="status"></div>
<div style="padding-top: 1em;">
    <div class="w3-container">
        <p><i class="fa fa-spinner w3-spin" style="font-size:50px"></i></p>
    </div>
</div>